version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: ems-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: ems
      MYSQL_USER: ems_user
      MYSQL_PASSWORD: ems_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend Spring Boot Application
  backend:
    build: 
      context: ./ems-backend
      dockerfile: Dockerfile
    container_name: ems-backend
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/ems
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=rootpassword
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/employees"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend React Application
  frontend:
    build:
      context: ./ems-frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: /api/employees
    container_name: ems-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  mysql_data:

networks:
  default:
    name: ems-network
